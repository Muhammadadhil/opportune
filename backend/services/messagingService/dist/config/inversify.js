"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const inversify_1 = require("inversify");
const types_1 = require("../interfaces/types");
const chat_services_1 = require("../services/implementation/chat.services");
const chat_controller_1 = require("../controllers/implementation/chat.controller");
const chat_repository_1 = require("../repositories/implementation/chat.repository");
const message_controller_1 = require("../controllers/implementation/message.controller");
const message_services_1 = require("../services/implementation/message.services");
const messageRepository_1 = require("../repositories/implementation/messageRepository");
const user_services_1 = require("../services/implementation/user.services");
const user_repository_1 = require("../repositories/implementation/user.repository");
const UserConsumer_1 = require("../events/rabbitmq/consumers/UserConsumer");
const container = new inversify_1.Container();
container.bind(types_1.TYPES.IUserService).to(user_services_1.UserService);
container.bind(types_1.TYPES.IUserRepository).to(user_repository_1.UserRepository);
container.bind(types_1.TYPES.IUserConsumer).to(UserConsumer_1.UserConsumer);
container.bind(types_1.TYPES.IChatController).to(chat_controller_1.ChatController);
container.bind(types_1.TYPES.IChatService).to(chat_services_1.ChatService);
container.bind(types_1.TYPES.IChatRepository).to(chat_repository_1.ChatRepository);
container.bind(types_1.TYPES.IMessageController).to(message_controller_1.MessageController);
container.bind(types_1.TYPES.IMessageService).to(message_services_1.MessageService);
container.bind(types_1.TYPES.IMessageRepository).to(messageRepository_1.MessageRepository);
exports.default = container;
